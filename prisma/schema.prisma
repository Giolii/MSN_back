
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())   
  email     String   @unique                
  username  String  @unique
  password  String  
  name String?                        
  avatar String?
  aboutMe String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  

            
  sentMessages Message[] @relation("SentMessages")
  conversations UserConversation[]

  friends      User[]   @relation("UserFriends")
  friendOf     User[]   @relation("UserFriends")

  @@index ([email])
  @@index ([username])
}

model Conversation {
  id String @id @default(cuid())
  name String? 
  isGroup Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  groupAvatar String?
  messages Message[]
  participants UserConversation[]

  @@index([createdAt])
}

model UserConversation{
  id String @id @default(cuid())
  userId String
  conversationId String
  joinedAt DateTime @default(now())
  leftAt DateTime?
  isAdmin Boolean @default(false)

  user User @relation(fields:[userId],references:[id])
  conversation Conversation @relation(fields: [conversationId],references: [id])

  @@unique([userId,conversationId])
  @@index([userId])
  @@index([conversationId])
}

model Message {
  id String @id @default(cuid())
  content String
  senderId String
  conversationId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isRead Boolean @default(false)
  readAt DateTime?
  notification String @default("")
  imageUrl String?

  sender User @relation("SentMessages", fields:[senderId], references: [id])
  conversation Conversation @relation(fields:[conversationId], references: [id])

  @@index([senderId])
  @@index([conversationId])
  @@index([createdAt])
}
